{"version":3,"sources":["contexts/AuthContext.tsx","hooks/useAuth.ts","config.ts","contexts/Web3Context.tsx","components/Loading.tsx","App.tsx","reportWebVitals.ts","theme/index.tsx","index.tsx","contexts/Snackbar.tsx"],"names":["AuthContext","createContext","address","chainId","loading","connect","disconnect","switchChain","web3Modal","Web3Modal","cacheProvider","providerOptions","AuthProvider","children","useState","setAddress","setLoading","setChainId","web3","setWeb3","showSnackbar","useSnackbar","subscribeProvider","provider","on","error","severity","message","accounts","a","Web3","givenProvider","currentProvider","eth","getAccounts","getChainId","chain","clearCachedProvider","console","close","useEffect","Provider","value","useAuth","useContext","config","ROPSTEN","Web3Context","wrongNetwork","contracts","Web3Provider","setWrongNetwork","setContracts","parseInt","contractAddress","tokenContract","Contract","tokenABI","useContracts","Wrapper","styled","position","background","top","left","bottom","right","display","alignItems","justifyContent","Loading","memo","style","height","CircularProgress","Home","lazy","App","Box","fallback","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","primary","main","secondary","typography","fontFamily","components","MuiLink","styleOverrides","root","color","Palette","ThemeProvider","ReactDOM","render","StrictMode","CssBaseline","Snackbar","document","getElementById","SnackbarContext","Alert","forwardRef","props","ref","elevation","variant","SnackbarProvider","snackbar","setSnackbar","handleClose","event","reason","open","autoHideDuration","onClose","sx","width"],"mappings":"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","file":"static/js/main.06f2d247.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\n// import WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nimport { useSnackbar } from \"./Snackbar\";\nimport { config } from \"../config\";\n\nexport const AuthContext = createContext<any>({\n  address: null,\n  chainId: null,\n  loading: false,\n  connect: () => null,\n  disconnect: () => null,\n  switchChain: () => null,\n});\n\nlet web3Modal = new Web3Modal({\n  cacheProvider: true,\n  providerOptions: {},\n});\n\n\nexport const AuthProvider = ({ children }) => {\n  const [address, setAddress] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [chainId, setChainId] = useState<number | null>(null);\n  const [web3, setWeb3] = useState<any>(null);\n  const { showSnackbar } = useSnackbar();\n\n  const subscribeProvider = (provider) => {\n    provider.on(\"disconnect\", (error) => {\n      showSnackbar({\n        severity: \"info\",\n        message: \"Account Disconnected\",\n      });\n    });\n    provider.on(\"accountsChanged\", (accounts) => {\n      setAddress(accounts[0]);\n      showSnackbar({\n        severity: \"info\",\n        message: \"Account Changed\",\n      });\n    });\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId) => {\n      setChainId(chainId);\n      showSnackbar({\n        severity: \"info\",\n        message: \"Network Changed\",\n      });\n    });\n  };\n\n  const connect = async () => {\n    if (address) {\n      return;\n    }\n    setLoading(true);\n\n    try {\n      let web3 = new Web3(Web3.givenProvider);\n\n      if (!web3.currentProvider) {\n        showSnackbar({\n          severity: \"error\",\n          message: \"Please install MetaMask!\",\n        });\n        return;\n      }\n      const provider = await web3Modal.connect();\n      subscribeProvider(provider);\n      web3 = new Web3(provider);\n      setWeb3(web3);\n\n      // const accounts = await window.ethereum.request({\n      //   method: \"eth_requestAccounts\",\n      // });\n      // const chain = await window.ethereum.request({method: 'eth_chainId'});\n      const accounts = await web3.eth.getAccounts();\n      const chain = await web3.eth.getChainId();\n      setAddress(accounts[0]);\n      setChainId(chain);\n    } catch (err) {\n      web3Modal.clearCachedProvider();\n      console.error(err);\n      showSnackbar({\n        severity: \"error\",\n        message: \"Failed to connect\",\n      });\n    }\n    setLoading(false);\n  };\n\n  const disconnect = async () => {\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    setChainId(null);\n    setAddress(null);\n  };\n\n  useEffect(() => {\n    // connect();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        web3,\n        address,\n        chainId,\n        loading,\n        connect,\n        disconnect,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => useContext(AuthContext);\n","import { useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n\nexport default function useAuth() {\n  return useContext(AuthContext);\n}\n","export const config = {\n  ERC20ContractAddress: {\n    ROPSTEN: \"0xec3f54e70facb7b2fc84ecf73cf2aa61fa2fc141\",\n  },\n};\n","import {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport Web3 from \"web3\";\nimport { Contract } from \"web3-eth-contract\";\n\nimport tokenABI from \"../contracts/abis/CHIAOToken.json\";\n\nimport { config } from \"../config\";\nimport useAuth from \"../hooks/useAuth\";\nimport { useSnackbar } from \"./Snackbar\";\n\ninterface Contracts {\n  tokenContract?: Contract;\n}\ninterface Web3ContextValue {\n  web3?: Web3;\n  contracts: Contracts;\n  wrongNetwork: boolean;\n}\n\nexport const Web3Context = createContext<Web3ContextValue>({\n  wrongNetwork: false,\n  contracts: {},\n});\n\nexport const Web3Provider = ({ children }: PropsWithChildren<any>) => {\n  const { web3, chainId } = useAuth();\n  const { showSnackbar } = useSnackbar();\n  const [wrongNetwork, setWrongNetwork] = useState(false);\n\n  const [contracts, setContracts] = useState<Contracts>({});\n\n  useEffect(() => {\n    if (!chainId) {\n      return;\n    }\n    const chainIdInt = parseInt(chainId);\n    if (chainIdInt !== 3) {\n      showSnackbar({\n        severity: \"error\",\n        message: \"Wrong network\",\n      });\n      setWrongNetwork(true);\n      return;\n    }\n    setWrongNetwork(false);\n\n    const contractAddress = config.ERC20ContractAddress.ROPSTEN;\n    const tokenContract = new web3.eth.Contract(\n      tokenABI as any,\n      contractAddress\n    );\n\n    setContracts({\n      tokenContract,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chainId]);\n\n  return (\n    <Web3Context.Provider value={{ web3, contracts, wrongNetwork }}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\nexport const useContracts = () => useContext(Web3Context);\n","import CircularProgress from \"@mui/material/CircularProgress\";\nimport { styled } from \"@mui/material/styles\";\nimport { memo } from \"react\";\n\nconst Wrapper = styled(\"div\")({\n  position: \"fixed\",\n  background: \"rgba(255, 255, 255, 0.5)\",\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nexport const Loading = memo(() => {\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <Wrapper>\n        <CircularProgress />\n      </Wrapper>\n    </div>\n  );\n});\n\nexport default Loading;\n","import { Box } from \"@mui/material\";\nimport { lazy, Suspense } from \"react\";\nimport { Switch } from \"react-router\";\nimport { Route } from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\nimport { Header } from \"./views/Header\";\n\n\nconst Home = lazy(() => import(\"./views/Home\"));\n\nfunction App() {\n  return (\n    <>\n      <Box>\n        <Switch>\n          <Suspense fallback={<Loading />}>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n          </Suspense>\n        </Switch>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { PropsWithChildren } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#eaeaea\",\n    },\n    secondary: {\n      main: \"#273a4c\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n  components: {\n    MuiLink: {\n      styleOverrides: {\n        root: {\n          color: \"#337ab7\",\n        },\n      },\n    },\n  }\n});\n\nexport default function Palette({ children }: PropsWithChildren<{}>) {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Web3Provider } from \"./contexts/Web3Context\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { SnackbarProvider } from \"./contexts/Snackbar\";\nimport ThemeProvider from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider>\n      <SnackbarProvider>\n        <Router>\n          <AuthProvider>\n            <Web3Provider>\n              <App />\n            </Web3Provider>\n          </AuthProvider>\n        </Router>\n      </SnackbarProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n  createContext,\n  Dispatch,\n  forwardRef,\n  useState,\n  SetStateAction,\n  useContext,\n} from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nexport const SnackbarContext = createContext<{\n  showSnackbar: Dispatch<\n    SetStateAction<{ severity: string; message: string } | null>\n  >;\n}>({\n  showSnackbar: (() => {}) as any,\n});\n\nconst Alert: any = forwardRef((props, ref: any) => {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport const SnackbarProvider = ({ children }) => {\n  const [snackbar, setSnackbar] = useState<{\n    severity: string;\n    message: string;\n  } | null>(null);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbar(null);\n  };\n\n  return (\n    <SnackbarContext.Provider value={{ showSnackbar: setSnackbar }}>\n      {children}\n      <Snackbar open={!!snackbar} autoHideDuration={4000} onClose={handleClose}>\n        {\n          <Alert\n            onClose={handleClose}\n            severity={snackbar?.severity}\n            sx={{ width: \"100%\" }}\n          >\n            {snackbar?.message}\n          </Alert>\n        }\n      </Snackbar>\n    </SnackbarContext.Provider>\n  );\n};\n\nexport const useSnackbar = () => useContext(SnackbarContext);\n"],"sourceRoot":""}