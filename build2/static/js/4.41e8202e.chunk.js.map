{"version":3,"sources":["views/Home.tsx"],"names":["Home","useAuth","address","chainId","loading","connect","disconnect","useContracts","tokenContract","contracts","wrongNetwork","showSnackbar","useSnackbar","useState","user","setUser","balance","setBalance","fetchInfo","a","methods","balanceOf","call","balanceCHIAO","parseInt","Web3","utils","fromWei","useEffect","checkConnect","severity","message","maxWidth","container","flexDirection","justifyContent","item","pt","variant","color","onClick","disabled","fontSize","mt"],"mappings":"ySAUe,SAASA,IAGtB,MAA2DC,cAAnDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,WAC5C,EAGIC,cAFWC,EADf,EACEC,UAAaD,cACbE,EAFF,EAEEA,aAEMC,EAAiBC,cAAjBD,aAER,EAAwBE,mBAAS,CAAEX,QAAS,GAAIC,QAAS,IAAzD,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAIMC,EAAS,uCAAG,8BAAAC,EAAA,yDACXX,GAAkBN,EADP,iEAIMM,EAAcY,QAAQC,UAAUnB,GAASoB,OAJ/C,OAIVN,EAJU,OAKVO,EAAeC,SAASC,IAAKC,MAAMC,QAAX,UAAsBX,GAAW,UAC/DC,EAAWM,GANK,2CAAH,qDASfK,qBAAU,WACH1B,GAAYC,GAIjB0B,IACAd,EAAQ,CAAEb,UAASC,QAASqB,SAASrB,MAJnCY,EAAQ,CAAEb,QAAS,GAAIC,QAAS,MAMjC,CAACD,EAASC,EAASO,IAEtBkB,qBAAU,WACHpB,GAGLU,MAEC,CAACV,IAEJ,IAAMqB,EAAe,WACnB,OAAK3B,GAODQ,IACFC,EAAa,CACXmB,SAAU,QACVC,QAAS,+CAEJ,IAXPpB,EAAa,CACXmB,SAAU,QACVC,QAAS,iCAEJ,IAYX,OACE,cAAC,IAAD,CAAWC,SAAS,KAApB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,cAAc,SAASC,eAAe,SAAtD,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACGnC,EACC,cAAC,IAAD,CAAQoC,QAAQ,WAAWC,MAAM,YAAYC,QAASlC,EAAtD,wBAIA,cAAC,IAAD,CACEmC,SAAUrC,EACVkC,QAAQ,WACRC,MAAM,YACNC,QAASnC,EAJX,8BAUc,IAAjBS,EAAKX,SACJ,cAAC,IAAD,CAAMiC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAYK,SAAU,GAAIC,GAAI,EAAGJ,MAAM,MAAvC,sDAKHrC,GAAWc,EAzEE,IA0EZ,eAAC,IAAD,CAAMoB,MAAI,EAACC,GAAI,EAAf,UACE,cAAC,IAAD,CAAYK,SAAU,GAAIC,GAAI,EAA9B,yCAGA,eAAC,IAAD,CAAYD,SAAU,GAAIC,GAAI,EAA9B,2BACiBzC,KAEjB,eAAC,IAAD,CAAYwC,SAAU,GAAIC,GAAI,EAA9B,iCACuB3B,QAIzB,eAAC,IAAD,CAAMoB,MAAI,EAACC,GAAI,EAAf,UACE,cAAC,IAAD,CAAYK,SAAU,GAAIC,GAAI,EAA9B,yFAICzC,GACC,eAAC,IAAD,CAAYwC,SAAU,GAAIC,GAAI,EAA9B,iCACuB3B","file":"static/js/4.41e8202e.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { Button, Container, Grid, Typography } from \"@mui/material\";\n\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useContracts } from \"../contexts/Web3Context\";\nimport { useSnackbar } from \"../contexts/Snackbar\";\nimport useAuth from \"../hooks/useAuth\";\nimport { config } from \"../config\";\n\nexport default function Home() {\n  // const { address, chainId, loading, connect, disconnect } =\n  //   useContext(AuthContext);\n  const { address, chainId, loading, connect, disconnect } = useAuth();\n  const {\n    contracts: { tokenContract },\n    wrongNetwork,\n  } = useContracts();\n  const { showSnackbar } = useSnackbar();\n\n  const [user, setUser] = useState({ address: \"\", chainId: 3 });\n  const [balance, setBalance] = useState(0);\n\n  const allowAmount = 100000000;\n\n  const fetchInfo = async () => {\n    if (!tokenContract || !address) {\n      return;\n    }\n    const balance = await tokenContract.methods.balanceOf(address).call();\n    const balanceCHIAO = parseInt(Web3.utils.fromWei(`${balance}`, \"ether\"));\n    setBalance(balanceCHIAO);\n  };\n\n  useEffect(() => {\n    if (!address || !chainId) {\n      setUser({ address: \"\", chainId: 3 });\n      return;\n    }\n    checkConnect();\n    setUser({ address, chainId: parseInt(chainId) });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, chainId, wrongNetwork]);\n\n  useEffect(() => {\n    if (!tokenContract) {\n      return;\n    }\n    fetchInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tokenContract]);\n\n  const checkConnect = () => {\n    if (!address) {\n      showSnackbar({\n        severity: \"error\",\n        message: \"Please connect your wallet.\",\n      });\n      return false;\n    }\n    if (wrongNetwork) {\n      showSnackbar({\n        severity: \"error\",\n        message: \"Please switch to Ethereum Ropsten Network\",\n      });\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container flexDirection=\"column\" justifyContent=\"center\">\n        <Grid item pt={3}>\n          {address ? (\n            <Button variant=\"outlined\" color=\"secondary\" onClick={disconnect}>\n              Disconnect\n            </Button>\n          ) : (\n            <Button\n              disabled={loading}\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={connect}\n            >\n              Connect Wallet\n            </Button>\n          )}\n        </Grid>\n        {user.chainId !== 3 && (\n          <Grid item pt={3}>\n            <Typography fontSize={18} mt={2} color=\"red\">\n              You need to switch to Ropsten network!\n            </Typography>\n          </Grid>\n        )}\n        {address && balance > allowAmount ? (\n          <Grid item pt={3}>\n            <Typography fontSize={22} mt={2}>\n              Information of your wallet.\n            </Typography>\n            <Typography fontSize={18} mt={2}>\n              Your Address: {address}\n            </Typography>\n            <Typography fontSize={18} mt={2}>\n              Your CHIAO balance: {balance}\n            </Typography>\n          </Grid>\n        ) : (\n          <Grid item pt={3}>\n            <Typography fontSize={18} mt={2}>\n              You need to connect your Metamask and have 100M CHIAO token to see\n              content.\n            </Typography>\n            {address && (\n              <Typography fontSize={18} mt={2}>\n                Your CHIAO balance: {balance}\n              </Typography>\n            )}\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n"],"sourceRoot":""}